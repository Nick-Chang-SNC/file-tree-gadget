{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Folder","props","useState","isOpen","setIsOpen","name","children","direction","onClick","className","style","marginLeft","File","fileExtension","split","mp4","jpeg","png","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAqBA,IAAMA,EAAS,SAACC,GACd,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACQC,EAAmBJ,EAAnBI,KAAMC,EAAaL,EAAbK,SACRC,EAAYJ,EAAS,OAAS,QAMpC,OACE,gCACE,uBAAMK,QANU,WAClBJ,GAAWD,IAKT,UACE,mBAAGM,UAAU,qBACb,mBAAGA,UAAS,gBAAWF,EAAX,WACXF,KAGH,qBAAKK,MAAO,CAAEC,WAAY,QAA1B,SAAqCR,EAASG,EAAW,WAKzDM,EAAO,SAACX,GACZ,IAAQI,EAASJ,EAATI,KACFQ,EAAgBR,EAAKS,MAAM,KAAK,GAOtC,OACE,gCACE,mBAAGL,UAAS,UARE,CAChBM,IAAK,QACLC,KAAM,aACNC,IAAK,sBAKwBJ,GAAf,WACXR,MAKQa,EA1Df,WACE,OACE,gCACE,eAAC,EAAD,CAAQb,KAAK,UAAb,UACE,eAAC,EAAD,CAAQA,KAAK,QAAb,UACE,cAAC,EAAD,CAAMA,KAAK,iBACX,cAAC,EAAD,CAAMA,KAAK,iBAEb,eAAC,EAAD,CAAQA,KAAK,SAAb,UACE,cAAC,EAAD,CAAMA,KAAK,cACX,cAAC,EAAD,CAAMA,KAAK,mBAIf,cAAC,EAAD,CAAQA,KAAK,qBCJJc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b544fc10.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  return (\n    <div>\n      <Folder name=\"Desktop\">\n        <Folder name=\"Music\">\n          <File name=\"all_star.mp4\" />\n          <File name=\"idgaf.mp4\" />\n        </Folder>\n        <Folder name=\"Images\">\n          <File name=\"dogs.jpeg\" />\n          <File name=\"cats.png\" />\n        </Folder>\n      </Folder>\n\n      <Folder name=\"Applications\" />\n    </div>\n  );\n}\n\nconst Folder = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const { name, children } = props;\n  const direction = isOpen ? \"down\" : \"right\";\n\n  const handleClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div>\n      <span onClick={handleClick}>\n        <i className=\"blue folder icon\"></i>\n        <i className={`caret ${direction} icon`}></i>\n        {name}\n      </span>\n      \n      <div style={{ marginLeft: \"17px\" }}>{isOpen ? children : null}</div>\n    </div>\n  );\n};\n\nconst File = (props) => {\n  const { name } = props;\n  const fileExtension = name.split(\".\")[1];\n  const fileIcons = {\n    mp4: \"music\",\n    jpeg: \"file image\",\n    png: \"file image outline\",\n  };\n\n  return (\n    <div>\n      <i className={`${fileIcons[fileExtension]} icon`}></i>\n      {name}\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}